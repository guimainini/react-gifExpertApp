{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","catego","type","value","onChange","target","propType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sPAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OAEI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAM,OAAKP,GAAL,mBAAmBO,OACxCN,EAAc,OAQd,2BAAOO,KAAO,OACVC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,YA0B/BZ,EAAYe,SAAW,CACnBd,c,OAAee,EAAUC,KAAKC,Y,2BCjCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAQN,IACzB,+BAAKA,EAAL,OCFCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAY,WACRxB,EAASC,GACJwB,MAAM,SAAAC,GAGCH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI1B,CAACpB,IAGGqB,EDlB0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAGrB,OACI,oCACI,gCAAOpB,EAAP,KAECoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eAGAiB,IAAMjB,EAAIC,IACND,UEnBfkB,EAAe,WAAO,IAAD,EAEM9C,mBAAS,CAAC,gBAFhB,mBAEvB+C,EAFuB,KAEXhD,EAFW,KAW9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAcA,cAAgBA,IAC9B,6BACA,4BAEQgD,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACA2B,IAAO3B,EACPA,SAAWA,U,MClBnC8B,IAASC,OACH,kBAAC,EAAD,MACJC,SAASC,eAAe,W","file":"static/js/main.bff32670.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( {setcategories} ) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = ( e ) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setcategories( catego => [inputValue,...catego ]  );\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input type = \"text\"\r\n                value={ inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>    \r\n    )\r\n            \r\n            \r\n        \r\n}\r\nAddCategory.propType = {\r\n    setcategories: PropTypes.func.isRequired\r\n}   ","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=qBg5LwUWNIpO5VEz1rVvhkatYXm9vlj4`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n\r\n    return gifs;\r\n\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt = { title } />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loaging</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        //key={ img.id }\r\n                        //img={ img }\r\n                        key={ img.id }\r\n                        {...img}\r\n                        />\r\n                        ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    //no pueden ser async\r\n    useEffect ( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                /* setTimeout( () => { */\r\n\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n               /*  },3000); */\r\n            })\r\n    }, [category])\r\n\r\n\r\n    return state; //{data:[], loading: true};\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setcategories] = useState(['Dragon Ball']);\r\n    \r\n    /* const handleAdd = () => {\r\n        const agregar = 'Radma 1/2';\r\n        setcategories([...categories, agregar]);\r\n        //setcategories( catego => [...catego, 'HunterXHunter']  );\r\n    } */\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory  setcategories={ setcategories } />\r\n            <hr />            \r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                        key= { category }\r\n                        category={ category } /> )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n      <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}